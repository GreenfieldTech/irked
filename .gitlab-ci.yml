# Build and deploy Irked
stages:
 - prep
 - build
 - deploy

variables:
  MAVEN_OPTS: "-Dmaven.repo.local=.m2"

image: maven:3-jdk-11

cache:
  paths:
    - .m2/

get-repo:
 stage: prep
 image: python
 only:
  - master
  - tags
 script:
  - pip install awscli
  - aws s3 cp s3://cloudonix-dist/maven2/releases/tech/greenfield/irked-vertx/maven-metadata.xml maven-repo/releases/tech/greenfield/irked-vertx/maven-metadata.xml
 artifacts:
  paths:
   - maven-repo/*

## Signing:
## The Gitlab CI has the signing private key and its passphrase stored in secure variables.
## The signing key is set to expire every year. If the key expires, and has not been leaked,
## You may renew it:
## 1. Import the private key on your local machine - the same way as the CI below is using it.
## 2. Run `gpg --edit-key $GPG_KEYNAME` to edit the key
## 3. Type `expire` to set a new expiration date, and set it to January 1st of the next year.
## 4. Hit CTRL+D to exit and approve to save change.
## 5. Run `gpg -K` to verify that the changes have been saved.
## 6. Run `gpg --keyserver keyserver.ubuntu.com --send-keys $GPG_KEYNAME` to update the key
##    with the new expiration date in the key server Maven central uses.
## 7. Re-export the private key by running `gpg --export-secret-keys 1D16F5A572DF7D328F542DC931248CD415E6C70A | base64 -w0`
##    and copy the resulting text into the Gitlab CI `GPG_PRIVATE_KEY` variable.

package:
 stage: build
 script:
  - mvn -s m2-settings.xml -B package
  - export GPG_TTY=$(tty)
  - export SIGN_KEY_ID=$GPG_KEYNAME
  - export SIGN_KEY_PASS="$(base64 -d <<<$GPG_PASSPHRASE)"
  - export SIGN_KEY="$(base64 -d <<<"$GPG_PRIVATE_KEY"| gpg --batch --import && gpg --pinentry-mode=loopback --export-secret-keys --passphrase-fd 0 --armor $SIGN_KEY_ID <<<"$SIGN_KEY_PASS")"
  - test -n "$SIGN_KEY"
  - mvn -s m2-settings.xml -B -DskipTests -DaltDeploymentRepository=repo::default::file:./maven-repo/$(grep -q SNAPSHOT pom.xml && echo snapshots || echo releases) deploy sign:sign -Dsign.skip=false
  - test $(ls target/*.jar.asc | wc -l) -ge 3
 artifacts:
  paths:
   - maven-repo/*
   - target/*

maven-repo:
 stage: build
 needs: [ package ]
 script:
  mvn -s ci-settings.xml -DskipTests -Dmaven.gpg.skip=true deploy -Pgitlab-maven
 rules:
  - if: $CI_COMMIT_TAG

ossrh:
 stage: deploy
 only:
  - tags
 script:
  - export SIGN_KEY_ID=$GPG_KEYNAME
  - export SIGN_KEY_PASS="$(base64 -d <<<$GPG_PASSPHRASE)"
  - export SIGN_KEY="$(base64 -d <<<"$GPG_PRIVATE_KEY"| gpg --import && gpg --export-secret-keys --armor)"
  - mvn -s m2-settings.xml -B -DskipTests package sign:sign deploy -Dsign.skip=false -DrepositoryId=ossrh -Drepository.username=${OSSRH_USERNAME} -Drepository.password="${OSSRH_PASSWORD}"

s3:
 stage: deploy
 image: python
 script:
  - pip install awscli
  - aws s3 sync --storage-class REDUCED_REDUNDANCY --acl public-read maven-repo/ s3://cloudonix-dist/maven2/
